allprojects {
    group 'com.hengyi.japp'
    version '1.0.2'
    repositories {
        mavenLocal()
        mavenCentral()
    }
    apply plugin: 'idea'
    apply plugin: "maven"
    apply plugin: 'maven-publish'
    ext {
        jzbVersion = '1.0'
        grpcVersion = '1.6.1'
        springVersion = '4.1.1.RELEASE'
        libraries = [
                okhttp             : 'com.squareup.okhttp3:okhttp:3.9.0',
                javaee_api         : "javax:javaee-api:7.0",
                hibernate_validator: "org.hibernate:hibernate-validator:5.4.1.Final",
                jpa_modelgen       : "org.eclipse.persistence:org.eclipse.persistence.jpa.modelgen.processor:2.7.0",
        ]
    }
}
subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    dependencies {
        compile "org.jzb:jzb-core:${jzbVersion}",
                "com.google.api.grpc:proto-google-common-protos:1.0.1",
                "io.grpc:grpc-netty:${grpcVersion}",
                "io.grpc:grpc-protobuf:${grpcVersion}",
                "io.grpc:grpc-stub:${grpcVersion}"

        testCompile "io.grpc:grpc-testing:${grpcVersion}"
    }
    [compileJava, compileTestJava].each() {
//        it.options.compilerArgs += ["-Xlint:all", "-Xlint:-options", "-Xlint:-path"]
        it.options.encoding = "UTF-8"
        if (rootProject.hasProperty('failOnWarnings') && rootProject.failOnWarnings.toBoolean()) {
            it.options.compilerArgs += ["-Werror"]
        }
    }
    compileTestJava {
        // serialVersionUID is basically guaranteed to be useless in our tests
        options.compilerArgs += ["-Xlint:-serial"]
    }
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    jar.manifest {
        attributes(
                'Implementation-Title': name,
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-JDK': System.getProperty('java.version'),
                'Source-Compatibility': sourceCompatibility,
                'Target-Compatibility': targetCompatibility
        )
    }
    javadoc.options {
        encoding = 'UTF-8'
        use = true
        links 'https://docs.oracle.com/javase/8/docs/api/'
    }
    artifacts {
        archives javadocJar, sourcesJar
    }

}
